<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<!-- dao -->
	<context:component-scan base-package="com.dao"/>
	<!-- c3p0 dataSource -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 加载驱动 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/ssms" />
		<property name="user" value="root" />
		<property name="password" value="123456" />
		<!-- 连接关闭时默认将所有未提交的操作回滚。默认为false -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 连接池中保留的最小连接数 -->
		<property name="minPoolSize" value="3" />
		<!-- 连接池中保留的最大连接数。默认为15 -->
		<property name="maxPoolSize" value="15" />
		<!-- 初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。默认为3 -->
		<property name="initialPoolSize" value="3" />
		<!-- 最大空闲时间，超过空闲时间的连接将被丢弃。为0或负数则永不丢弃。默认为0秒 -->
		<property name="maxIdleTime" value="0" />
		<!-- 当连接池中的连接用完时，C3P0一次性创建新连接的数目。默认为3 -->
		<property name="acquireIncrement" value="3" />
		<!-- 定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30 -->
		<property name="acquireRetryAttempts" value="30" />
		<!-- 当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒，默认为0 -->
		<property name="checkoutTimeout" value="0" />
	</bean> 
	<!-- sessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
				<!-- cureentSesssion -->
				hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
				<!-- Second-level caching -->
				hibernate.cache.use_second_level_cache=true<!-- 启用二级缓存 -->
				hibernate.cache.use_query_cache=true<!-- 配置启用查询缓存 -->
				hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				hibernate.cache.provider_configuration_file_resource_path=/ehcache.xml
				<!-- sql -->
				hibernate.show_sql = false
				hibernate.format_sql = false
				hibernate.hbm2ddl.auto = update
			</value>
		</property>
		<property name="packagesToScan">
			<array>
				<value>com.model</value>
			</array>
		</property>
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate4.HibernateTemplate">
    	<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
<!-- 
	hibernate.cache.use_structured_entries=true
	hibernate.generate_statistics=true
 -->
</beans>